#pragma once
#define GYOFIRST

/*
In this file:
- better type names for common types (s8, u8, s16, u16, s32, u32, s64, u64, f32, f64)
- max and min values for unsigned and signed types
- custom print replacement to printf, can be used to also print more complex custom types
- printsl, like print but without \n at the end
- ASSERT macro which can be deactivated, prints a custom (optional) formatted message and returns the expression value
- ASSERT_BOUNDS to make out of bounds checks easier
- defer macro, like golang's defer
- For macro to provide a more convenient way to iterate over Array and similar structs
*/

#ifndef DISABLE_INCLUDES
    #include <stdio.h>
    #include <stdint.h>
    #include <stdlib.h>
#endif

typedef int8_t   s8;
typedef uint8_t  u8;
typedef int16_t  s16;
typedef uint16_t u16;
typedef int32_t  s32;
typedef uint32_t u32;
typedef int64_t  s64;
typedef uint64_t u64;
typedef float    f32;
typedef double   f64;

#define MAX_U8  0xFF
#define MAX_U16 0xFFFF
#define MAX_U32 0xFFFFFFFF
#define MAX_U64 0xFFFFFFFFFFFFFFFF
#define MAX_S8  0x7F
#define MAX_S16 0x7FFF
#define MAX_S32 0x7FFFFFFF
#define MAX_S64 0x7FFFFFFFFFFFFFFF
#define MIN_S8  0x80
#define MIN_S16 0x8000
#define MIN_S32 0x80000000
#define MIN_S64 0x8000000000000000

#ifndef INFINITY
#define INFINITY   ((float)(1e+300 * 1e+300))
#endif
#ifndef NAN
#define NAN        (-(float)(INFINITY * 0.0F))
#endif

#define MSVC_BUG(MACRO, ARGS) MACRO ARGS // fuck you microsoft

//
// alternative to printf, print and printsl:
// any print is just printsl with a \n at the end (sl = single line)
//
// usage: either print(variable), or print("message with replacements", var1, var2, ...)
// printf uses % followed by a character (or more) to know how to print your variable, for
// example %d prints integers, %f floats, %p pointers etc, we don't do that, we decide how
// to print the variable depending on it's type (floats will be printed as floats,
// integers as integers, etc.).
// to do so simply put '%' where you want your variable to be printed.
// if you want to print % as a symbol, add \\ before the %
//
// if you want more advanted formatting (how many characters a float has, padding, identation, ...)
// then simply use printf
//
// example usage:
// int a = 15;
// float b = 12.5;
// print(a);
// print("this is value %", a);
// print("this is a percentage: %\\%", a);
// print("values a=%, b=%", a, b);
//

// TODO(cogno): also convert, f32, f64
int u64_to_char_ptr(u64 value, char* dest) {
    char temp[22];
    char* temp_ptr = temp;
    u64 v = value;
    
    // put each digit into temp (smallest to highest units)
    char i;
    while(v || temp_ptr == temp) {
        i = v % 10;
        v /= 10;
        *temp_ptr++ = i + '0';
    }
    
    int digits_count = (int)(temp_ptr - temp);
    
    // copy digits into final buffer in the correct order
    while(temp_ptr > temp) *dest++ = *--temp_ptr;
    return digits_count;
}


int s64_to_char_ptr(s64 value, char* dest) {
    if(value >= 0) return u64_to_char_ptr((u64)value, dest);
    
    *dest++ = '-';
    return 1 + u64_to_char_ptr(-value, dest);
}

int s32_to_char_ptr(s32 value, char* dest) { return s64_to_char_ptr((s64)value, dest); }
int u32_to_char_ptr(u32 value, char* dest) { return u64_to_char_ptr((u64)value, dest); }
int u16_to_char_ptr(u16 value, char* dest) { return u64_to_char_ptr((u64)value, dest); }
int u8_to_char_ptr( u8  value, char* dest) { return u64_to_char_ptr((u64)value, dest); }
int s16_to_char_ptr(s16 value, char* dest) { return s64_to_char_ptr((s64)value, dest); }
int s8_to_char_ptr( s8  value, char* dest) { return s64_to_char_ptr((s64)value, dest); }

//
// new print (like old but buffered for extra speed)
//



int __buffer_index = 0;
const int __BUFF_SIZE = 0xFF;
char __print_buff[__BUFF_SIZE] = "";
inline void flush_to_stdout() {
    fwrite(__print_buff, 1, __buffer_index, stdout);
    __buffer_index = 0;
}

// API(cogno): we might be able to replace this with our custom implementations
#define buffer_append(fmt, ...) __buffer_index += snprintf(__print_buff + __buffer_index, __BUFF_SIZE - __buffer_index, fmt, __VA_ARGS__)



// print standard specializations
// API(cogno): maybe a name like custom_format is better? I don't know
inline void printsl_custom(const char* s) { int index = 0; while(s[index]) __print_buff[__buffer_index++] = s[index++]; }
inline void printsl_custom(char c)        { __print_buff[__buffer_index++] = c; }
inline void printsl_custom(s8  d)         { __buffer_index += s8_to_char_ptr( d, __print_buff + __buffer_index); }
inline void printsl_custom(s16 d)         { __buffer_index += s16_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(s32 d)         { __buffer_index += s32_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(s64 d)         { __buffer_index += s64_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(u8  d)         { __buffer_index += u8_to_char_ptr( d, __print_buff + __buffer_index); }
inline void printsl_custom(u16 d)         { __buffer_index += u16_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(u32 d)         { __buffer_index += u32_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(u64 d)         { __buffer_index += u64_to_char_ptr(d, __print_buff + __buffer_index); }
inline void printsl_custom(float f)       { buffer_append("%.5f", f); }
inline void printsl_custom(double f)      { buffer_append("%.5f", f); }
inline void printsl_custom(bool b)        { if (b) printsl_custom("true"); else printsl_custom("false"); }
inline void printsl_custom() { }

// default behaviour, unknown types prints "(unknown type)", while pointers are printed as such
template<typename T> void printsl_custom(T v)  { printsl_custom("(unknown type)"); }
template<typename T> void printsl_custom(T* to_print) {
    union Temp {
        T* ptr;
        u64 u64;
    } t; // NOTE(cogno): if we cast T* to u64/u32 we might get a warning (which some projects turn into an error), so we use an union
    t.ptr = to_print;
    buffer_append("0x%04X_%04X_%04X", (u32)(t.u64 >> 32) & 0xffff, (u32)(t.u64 >> 16) & 0xffff, (u32)t.u64 & 0xffff);
}

// first we recursively accumulate into a buffer, then we flush it
inline void accumulate_into_buffer(const char* s) {
    // we don't have any more inputs but we might still need to escape some '\%' to print percentages
    //API(cogno): maybe we can write '(missing input)' ?
    int current_index = 0;
    while(true) {
        char c = s[current_index++];
        if(c == 0) return;
        if(c == '\\') {
            char next = s[current_index];
            if(next == '%') { printsl_custom('%'); current_index++; }
        } else if(c == '%') {
            printsl_custom("(missing input)");
        } else {
            printsl_custom(c);
        }
    }
}

template <typename T, typename... Types>
void accumulate_into_buffer(const char* s, T t1, Types... others) {
    // printf("'%s'\n", s);
    int current_index = 0;
    while(true) {
        char c = s[current_index++];
        if(c == 0) {
            // if we are at the end of the string *here* we have more inputs to print, but there's obviously no space (we should be in the function above!)
            printsl_custom("(extra inputs given)");
            return;
        }
        else if(c == '\\') {
            char next = s[current_index];
            // escape characters
            if(next == '%') { printsl_custom('%'); current_index++; }
        } else if(c == '%') {
            // printf("'putting format'\n");
            break; // put formatted input
        } else {
            // just a character to print
            printsl_custom(c);
        }
    }
    printsl_custom(t1);
    accumulate_into_buffer(s + current_index, others...);
}

//
// print single inputs
//
template <typename T>
void printsl(T t) {
    printsl_custom(t);
    flush_to_stdout();
}

template <typename T>
void print(T t) {
    printsl_custom(t);
    printsl_custom('\n');
    flush_to_stdout();
}

//
// print multiple inputs
//
template <typename T, typename... Types>
void printsl(const char* s, T t1, Types... others) {
    accumulate_into_buffer(s, t1, others...);
    flush_to_stdout();
}

// print formatting
template <typename T, typename... Types>
void print(const char* s, T t1, Types... others) {
    accumulate_into_buffer(s, t1, others...);
    printsl_custom('\n');
    flush_to_stdout();
}


//
// ASSERT macros. stops program execution with a given (optional) message if an expression is not satisfied.
// can be deactivated by defining 'NO_ASSERT'. When deactivated the macro is turned into the expression, so it
// can be used inside if to keep runtime checks.
// Example:
// if(!ASSERT(index < array_size, "attempting to read out of bounds! reading at %", index)) return;
// array[index] = value;
//
// When this code is run with asserts enabled if the index is above array_size the program will stop with an info message
// But when asserts are disabled this code is equivalent to
// if(!(index < array_size)) return;
// Which is very useful to keep the check even at runtime!
//
//

#ifdef _MSC_VER
#define DEBUG_BREAK __debugbreak()
#elif __GNUC__
#define DEBUG_BREAK __builtin_trap()
#else
#define DEBUG_BREAK
#endif

template <typename... Types>
inline bool assert_func(bool expr, const char* expression_as_string, const char* filename, int line_count, const char* function_name) {
    if(!expr) {
        print("### Assertion failed");
        print("    Code: '%'", expression_as_string);
        print("    File: %", filename);
        print("    Line: %", line_count);
        print("    Function: %", function_name);
        print("Stack Trace:"); // TODO(cogno): can we display it only when needed/when it actually works?
        DEBUG_BREAK;
        abort(); // so the stack trace works (exit(-1) or exit(0) don't)
    }
    return expr;
}

template <typename... Types>
inline bool assert_func(bool expr, const char* expression_as_string, const char* filename, int line_count, const char* function_name, const char* optional_message, Types... message_inputs) {
    if(!expr) {
        // printf("assertion failed\n");
        printsl("### Assertion failed: ");
        print(optional_message, message_inputs...);
        print("    Code: '%'", expression_as_string);
        print("    File: %", filename);
        print("    Line: %", line_count);
        print("    Function: %", function_name);
        print("Stack Trace:"); // TODO(cogno): can we display it only when needed/when it actually works?
        DEBUG_BREAK;
        abort(); // so the stack trace works (exit(-1) or exit(0) don't)
    }
    return expr;
}


#ifndef NO_ASSERT
#define ASSERT(expr, ...) (assert_func(expr, #expr, __FILE__, __LINE__, __FUNCTION__,##__VA_ARGS__))
#define ASSERT_BOUNDS(var, start, length) ASSERT(((var) >= (start)) && ((var) < ((start) + (length))), "OUT OF BOUNDS! expected between % and % but was %", (start), ((start) + (length)), (var))
#else
#define ASSERT(expr, ...) (expr)
#define ASSERT_BOUNDS(var, start, length) (((var) >= (start)) && ((var) < ((start) + (length))))
#endif

//
// defer macro. calls code inside a defer {...}; block when the current scope closes (function exit, block ending, for cycle ending, ...)
//
template <typename F>
struct ScopeExit {
    ScopeExit(F f) : f(f) {}
    ~ScopeExit() { f(); }
    F f;
};

struct {
    template <typename F>
    ScopeExit<F> operator<<(F f) {
        return ScopeExit<F>(f);
    }
} the_trick_that_lets_us_concatenate;

#define STRING_JOIN_(arg1, arg2) arg1 ## arg2
#define STRING_JOIN(arg1, arg2) STRING_JOIN_(arg1, arg2)
#define defer auto STRING_JOIN(scope_exit_, __LINE__) = the_trick_that_lets_us_concatenate << [&]



// sigh..., when you convert va args to string you get "a, b, c" instead of "a", "b", "c"
// and you can't have recursive macros, so we need to make this shitfest of giant walls for like size 100 macros
// i fucking hate this but at least it works
//                         - cogno 2023/09/29

#define NUM_ARGS_2(_1,_2,_3,_4,_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_40,_41,_42,_43,_44,_45,_46,_47,_48,_49,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_70,_71,_72,_73,_74,_75,_76,_77,_78,_79,_80,_81,_82,_83,_84,_85,_86,_87,_88,_89,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_100, TOTAL, ...) TOTAL
#define NUM_ARGS_1(...) MSVC_BUG(NUM_ARGS_2, (__VA_ARGS__))
#define NUM_ARGS(...) NUM_ARGS_1(__VA_ARGS__, 100,99,98,97,96,95,94,93,92,91,90,89,88,87,86,85,84,83,82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,66,65,64,63,62,61,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1)
// YES THIS IS JUST TO KNOW HOW MANY FUCKING VARARGS WE HAVE, JUST WAIT


#define COUNTER(...) MSVC_BUG(NUM_ARGS, (__VA_ARGS__))

#define TO_STR_1(_1) #_1
#define TO_STR_2(_1, _2) #_1, #_2
#define TO_STR_3(_1, _2, _3) #_1, #_2, #_3
#define TO_STR_4(_1, _2, _3, _4) #_1, #_2, #_3, #_4
#define TO_STR_5(_1, _2, _3, _4, _5) #_1, #_2, #_3, #_4, #_5
#define TO_STR_6(_1, _2, _3, _4, _5, _6) #_1, #_2, #_3, #_4, #_5, #_6
#define TO_STR_7(_1, _2, _3, _4, _5, _6, _7) #_1, #_2, #_3, #_4, #_5, #_6, #_7
#define TO_STR_8(_1, _2, _3, _4, _5, _6, _7, _8) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8
#define TO_STR_9(_1, _2, _3, _4, _5, _6, _7, _8, _9) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9
#define TO_STR_10(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10
#define TO_STR_11(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11
#define TO_STR_12(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12
#define TO_STR_13(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13
#define TO_STR_14(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14
#define TO_STR_15(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15
#define TO_STR_16(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16
#define TO_STR_17(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17
#define TO_STR_18(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18
#define TO_STR_19(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19
#define TO_STR_20(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20
#define TO_STR_21(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21
#define TO_STR_22(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22
#define TO_STR_23(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23
#define TO_STR_24(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24
#define TO_STR_25(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25
#define TO_STR_26(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26
#define TO_STR_27(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27
#define TO_STR_28(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28
#define TO_STR_29(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29
#define TO_STR_30(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30
#define TO_STR_31(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31
#define TO_STR_32(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32
#define TO_STR_33(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33
#define TO_STR_34(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34
#define TO_STR_35(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35
#define TO_STR_36(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36
#define TO_STR_37(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37
#define TO_STR_38(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38
#define TO_STR_39(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39
#define TO_STR_40(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40
#define TO_STR_41(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41
#define TO_STR_42(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42
#define TO_STR_43(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43
#define TO_STR_44(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44
#define TO_STR_45(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45
#define TO_STR_46(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46
#define TO_STR_47(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47
#define TO_STR_48(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48
#define TO_STR_49(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49
#define TO_STR_50(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50
#define TO_STR_51(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51
#define TO_STR_52(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52
#define TO_STR_53(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53
#define TO_STR_54(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54
#define TO_STR_55(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55
#define TO_STR_56(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56
#define TO_STR_57(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57
#define TO_STR_58(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58
#define TO_STR_59(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59
#define TO_STR_60(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60
#define TO_STR_61(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61
#define TO_STR_62(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62
#define TO_STR_63(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63
#define
#define TO_STR_65(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65
#define
#define
#define
#define
#define
#define TO_STR_71(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71
#define
#define
#define TO_STR_74(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74
#define TO_STR_75(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75
#define TO_STR_76(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76
#define TO_STR_77(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77
#define TO_STR_78(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78
#define TO_STR_79(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79
#define TO_STR_80(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80
#define TO_STR_81(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81
#define TO_STR_82(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82
#define TO_STR_83(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83
#define TO_STR_84(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define
#define TO_STR_99(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84, #_85, #_86, #_87, #_88, #_89, #_90, #_91, #_92, #_93, #_94, #_95, #_96, #_97, #_98, #_99
#define TO_STR_100(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100) #_1, #_2, #_3, #_4, #_5, #_6, #_7, #_8, #_9, #_10, #_11, #_12, #_13, #_14, #_15, #_16, #_17, #_18, #_19, #_20, #_21, #_22, #_23, #_24, #_25, #_26, #_27, #_28, #_29, #_30, #_31, #_32, #_33, #_34, #_35, #_36, #_37, #_38, #_39, #_40, #_41, #_42, #_43, #_44, #_45, #_46, #_47, #_48, #_49, #_50, #_51, #_52, #_53, #_54, #_55, #_56, #_57, #_58, #_59, #_60, #_61, #_62, #_63, #_64, #_65, #_66, #_67, #_68, #_69, #_70, #_71, #_72, #_73, #_74, #_75, #_76, #_77, #_78, #_79, #_80, #_81, #_82, #_83, #_84, #_85, #_86, #_87, #_88, #_89, #_90, #_91, #_92, #_93, #_94, #_95, #_96, #_97, #_98, #_99, #_100
// yes...

#define DO_CONCAT(a, b) a##b
#define STR_CONCAT(a, b) DO_CONCAT(a, b)

#define TO_STR_N(n, ...) MSVC_BUG(STR_CONCAT(TO_STR_, n), (__VA_ARGS__))
#define STRINGIFY_(n, ...) TO_STR_N(n, __VA_ARGS__)
#define STRINGIFY(...) MSVC_BUG(STRINGIFY_, (COUNTER(__VA_ARGS__), __VA_ARGS__))

#define ENUM(EnumName, ...) \
enum class EnumName { __VA_ARGS__ }; \
const int EnumName##Size = NUM_ARGS(__VA_ARGS__); \
const char* EnumName##Strings[] = { STRINGIFY(__VA_ARGS__) }; \
const char* to_string(EnumName to_convert) { \
    int index = (s32)to_convert; \
    ASSERT_BOUNDS(index, 0, EnumName##Size); \
    return EnumName##Strings[index]; \
} \
void printsl_custom(EnumName to_print) { \
    printsl("%::%", #EnumName, to_string(to_print)); \
}

// 
// macros for improved for cycle. 
// Works with any structs with 'size' and 'ptr' values. 
// The 4 alternatives can iterate over elements by values, by pointer, by values in reverse order and
// by pointer in reverse order
// Example:
// For(array) {
//     print("index % = %", it_index, it);    
// }
// Which is much less stuff to write than:
// for(int i = 0; i < array.size; i++) {
//     auto value = array.ptr[i];
//     print("index % = %", i, value);
// }
//
#define For(arr) \
for(int it_index = 0, _=1;_;_=0) \
    for(auto it = (arr).ptr[it_index]; it_index < (arr).size; it = (arr).ptr[++it_index])

#define For_ptr(arr) \
for(int it_index = 0, _=1;_;_=0) \
    for(auto* it = &((arr).ptr[it_index]); it_index < (arr).size; it = &((arr).ptr[++it_index]))

#define For_rev(arr) \
for(int it_index = (arr).size - 1, _=1;_;_=0) \
    for(auto it = (arr).ptr[it_index]; it_index >= 0; it = (arr).ptr[--it_index])

#define For_ptr_rev(arr) \
for(int it_index = (arr).size - 1, _=1;_;_=0) \
    for(auto* it = &((arr).ptr[it_index]); it_index >= 0; it = &((arr).ptr[--it_index]))

#define For_rev_ptr(arr) For_ptr_rev((arr))

// A simple macro to write for(Range(10, 30)) instead of for(int it = 10; it < 30; it++), just for brevity
// TODO(cogno): what if you put an array inside another? "it" name conflict?
#define FOR_RANGE(min, max) s32 it = min; it < max; it++
#define Range(min, max) FOR_RANGE(min, max)
